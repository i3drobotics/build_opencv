name: Build non-CUDA options

on: push

env:
  option_path: options/options_opencv4.9.0_contrib_vc16.txt

jobs:    
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Download OpenCV repo/s
      working-directory: scripts/windows
      shell: cmd
      run: .\download.bat options\options_opencv4.9.0_contrib_vc16.txt
    - name: Build OpenCV
      working-directory: scripts/windows
      shell: cmd
      run: .\build.bat options\options_opencv4.9.0_contrib_vc16.txt
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Build artifact
        path: install
  
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: ["ubuntu:20.04", "ubuntu:22.04", "ubuntu:23.04"]
    container:
      image: ${{matrix.os}}
      options: --privileged
    steps:
    - name: Setup things in container
      run: |
        apt update
        apt install -y sudo wget git build-essential

    - uses: actions/checkout@v2
    - name: Download OpenCV repo/s
      run: |
        scripts/linux/download.sh $option_path
    - name: Build OpenCV
      run: |
        scripts/linux/build.sh $option_path
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Build artifact
        path: install

    - name: Create Tarball
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        asset_name=opencv-${{github.ref.name}}-${{ matrix.os }}.tar.gz
        tar -czvf ${asset_name} -C install
        echo "ASSET_NAME=${asset_name}" >> $GITHUB_ENV

    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ env.ASSET_NAME }}

